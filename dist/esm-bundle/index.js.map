{
  "version": 3,
  "sources": ["../../libfftw3-wasm/libfftw3.cjs", "../../src/instantiateFFTWModule.ts", "../../src/instantiateFFTWModuleFromFile.ts", "../../src/FFTW.ts"],
  "sourcesContent": ["\nvar FFTWModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(FFTWModule) {\n  FFTWModule = FFTWModule || {};\n\n\n\n// The Module object: Our interface to the outside world. We import\n// and export values on it. There are various ways Module can be used:\n// 1. Not defined. We create it here\n// 2. A function parameter, function(Module) { ..generated code.. }\n// 3. pre-run appended it, var Module = {}; ..generated code..\n// 4. External script tag defines var Module.\n// We need to check if Module already exists (e.g. case 3 above).\n// Substitution will be replaced with actual code on later stage of the build,\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\n// Note that if you want to run closure, and also to use Module\n// after the generated code, you will need to define   var Module = {};\n// before the code. Then that object will be used in the code, and you\n// can continue to use Module afterwards as well.\nvar Module = typeof FFTWModule != 'undefined' ? FFTWModule : {};\n\n// See https://caniuse.com/mdn-javascript_builtins_object_assign\n\n// See https://caniuse.com/mdn-javascript_builtins_bigint64array\n\n// Set up the promise that indicates the Module is initialized\nvar readyPromiseResolve, readyPromiseReject;\nModule['ready'] = new Promise(function(resolve, reject) {\n  readyPromiseResolve = resolve;\n  readyPromiseReject = reject;\n});\n[\"_fftwf_plan_r2r_1d\",\"_fftwf_plan_r2r_2d\",\"_fftwf_plan_dft_r2c_1d\",\"_fftwf_plan_dft_c2r_1d\",\"_fftwf_plan_dft_1d\",\"_fftwf_plan_dft_2d\",\"_fftwf_free\",\"_fftwf_malloc\",\"_fftwf_execute\",\"_fftwf_destroy_plan\",\"_fflush\",\"onRuntimeInitialized\"].forEach((prop) => {\n  if (!Object.getOwnPropertyDescriptor(Module['ready'], prop)) {\n    Object.defineProperty(Module['ready'], prop, {\n      get: () => abort('You are getting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\n      set: () => abort('You are setting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\n    });\n  }\n});\n\n// --pre-jses are emitted after the Module integration code, so that they can\n// refer to Module (if they choose; they can also define Module)\n// {{PRE_JSES}}\n\n// Sometimes an existing Module object exists with properties\n// meant to overwrite the default module functionality. Here\n// we collect those properties and reapply _after_ we configure\n// the current environment's defaults to avoid having to be so\n// defensive during initialization.\nvar moduleOverrides = Object.assign({}, Module);\n\nvar arguments_ = [];\nvar thisProgram = './this.program';\nvar quit_ = (status, toThrow) => {\n  throw toThrow;\n};\n\n// Determine the runtime environment we are in. You can customize this by\n// setting the ENVIRONMENT setting at compile time (see settings.js).\n\n// Attempt to auto-detect the environment\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\n// also a web environment.\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string';\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nif (Module['ENVIRONMENT']) {\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n}\n\n// `/` should be present at the end if `scriptDirectory` is not empty\nvar scriptDirectory = '';\nfunction locateFile(path) {\n  if (Module['locateFile']) {\n    return Module['locateFile'](path, scriptDirectory);\n  }\n  return scriptDirectory + path;\n}\n\n// Hooks that are implemented differently in different runtime environments.\nvar read_,\n    readAsync,\n    readBinary,\n    setWindowTitle;\n\n// Normally we don't log exceptions but instead let them bubble out the top\n// level where the embedding environment (e.g. the browser) can handle\n// them.\n// However under v8 and node we sometimes exit the process direcly in which case\n// its up to use us to log the exception before exiting.\n// If we fix https://github.com/emscripten-core/emscripten/issues/15080\n// this may no longer be needed under node.\nfunction logExceptionOnExit(e) {\n  if (e instanceof ExitStatus) return;\n  let toLog = e;\n  if (e && typeof e == 'object' && e.stack) {\n    toLog = [e, e.stack];\n  }\n  err('exiting due to exception: ' + toLog);\n}\n\nif (ENVIRONMENT_IS_NODE) {\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\n  // the require()` function.  This is only necessary for multi-environment\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n  // TODO: Swap all `require()`'s with `import()`'s?\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\n  // the complexity of lazy-loading.\n  var fs = require('fs');\n  var nodePath = require('path');\n\n  if (ENVIRONMENT_IS_WORKER) {\n    scriptDirectory = nodePath.dirname(scriptDirectory) + '/';\n  } else {\n    scriptDirectory = __dirname + '/';\n  }\n\n// include: node_shell_read.js\n\n\nread_ = (filename, binary) => {\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n  // necessary in that case, the path should already be absolute.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  return fs.readFileSync(filename, binary ? undefined : 'utf8');\n};\n\nreadBinary = (filename) => {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n    ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n};\n\nreadAsync = (filename, onload, onerror) => {\n  // See the comment in the `read_` function.\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n  fs.readFile(filename, function(err, data) {\n    if (err) onerror(err);\n    else onload(data.buffer);\n  });\n};\n\n// end include: node_shell_read.js\n  if (process['argv'].length > 1) {\n    thisProgram = process['argv'][1].replace(/\\\\/g, '/');\n  }\n\n  arguments_ = process['argv'].slice(2);\n\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n  process['on']('uncaughtException', function(ex) {\n    // suppress ExitStatus exceptions from showing an error\n    if (!(ex instanceof ExitStatus)) {\n      throw ex;\n    }\n  });\n\n  // Without this older versions of node (< v15) will log unhandled rejections\n  // but return 0, which is not normally the desired behaviour.  This is\n  // not be needed with node v15 and about because it is now the default\n  // behaviour:\n  // See https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode\n  process['on']('unhandledRejection', function(reason) { throw reason; });\n\n  quit_ = (status, toThrow) => {\n    if (keepRuntimeAlive()) {\n      process['exitCode'] = status;\n      throw toThrow;\n    }\n    logExceptionOnExit(toThrow);\n    process['exit'](status);\n  };\n\n  Module['inspect'] = function () { return '[Emscripten Module object]'; };\n\n} else\nif (ENVIRONMENT_IS_SHELL) {\n\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  if (typeof read != 'undefined') {\n    read_ = function shell_read(f) {\n      return read(f);\n    };\n  }\n\n  readBinary = function readBinary(f) {\n    let data;\n    if (typeof readbuffer == 'function') {\n      return new Uint8Array(readbuffer(f));\n    }\n    data = read(f, 'binary');\n    assert(typeof data == 'object');\n    return data;\n  };\n\n  readAsync = function readAsync(f, onload, onerror) {\n    setTimeout(() => onload(readBinary(f)), 0);\n  };\n\n  if (typeof scriptArgs != 'undefined') {\n    arguments_ = scriptArgs;\n  } else if (typeof arguments != 'undefined') {\n    arguments_ = arguments;\n  }\n\n  if (typeof quit == 'function') {\n    quit_ = (status, toThrow) => {\n      logExceptionOnExit(toThrow);\n      quit(status);\n    };\n  }\n\n  if (typeof print != 'undefined') {\n    // Prefer to use print/printErr where they exist, as they usually work better.\n    if (typeof console == 'undefined') console = /** @type{!Console} */({});\n    console.log = /** @type{!function(this:Console, ...*): undefined} */ (print);\n    console.warn = console.error = /** @type{!function(this:Console, ...*): undefined} */ (typeof printErr != 'undefined' ? printErr : print);\n  }\n\n} else\n\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n// ENVIRONMENT_IS_NODE.\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\n    scriptDirectory = self.location.href;\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\n    scriptDirectory = document.currentScript.src;\n  }\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\n  // is gone, so we saved it, and we use it here instead of any other info.\n  if (_scriptDir) {\n    scriptDirectory = _scriptDir;\n  }\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n  // otherwise, slice off the final part of the url to find the script directory.\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n  // and scriptDirectory will correctly be replaced with an empty string.\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n  // they are removed because they could contain a slash.\n  if (scriptDirectory.indexOf('blob:') !== 0) {\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf('/')+1);\n  } else {\n    scriptDirectory = '';\n  }\n\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n\n  // Differentiate the Web Worker from the Node Worker case, as reading must\n  // be done differently.\n  {\n// include: web_or_worker_shell_read.js\n\n\n  read_ = (url) => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, false);\n      xhr.send(null);\n      return xhr.responseText;\n  }\n\n  if (ENVIRONMENT_IS_WORKER) {\n    readBinary = (url) => {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url, false);\n        xhr.responseType = 'arraybuffer';\n        xhr.send(null);\n        return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\n    };\n  }\n\n  readAsync = (url, onload, onerror) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.onload = () => {\n      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\n        onload(xhr.response);\n        return;\n      }\n      onerror();\n    };\n    xhr.onerror = onerror;\n    xhr.send(null);\n  }\n\n// end include: web_or_worker_shell_read.js\n  }\n\n  setWindowTitle = (title) => document.title = title;\n} else\n{\n  throw new Error('environment detection error');\n}\n\nvar out = Module['print'] || console.log.bind(console);\nvar err = Module['printErr'] || console.warn.bind(console);\n\n// Merge back in the overrides\nObject.assign(Module, moduleOverrides);\n// Free the object hierarchy contained in the overrides, this lets the GC\n// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.\nmoduleOverrides = null;\ncheckIncomingModuleAPI();\n\n// Emit code to handle expected values on the Module object. This applies Module.x\n// to the proper local x. This has two benefits: first, we only emit it if it is\n// expected to arrive, and second, by using a local everywhere else that can be\n// minified.\n\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\n\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\n\nif (Module['quit']) quit_ = Module['quit'];legacyModuleProp('quit', 'quit_');\n\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n// Assertions on removed incoming Module JS APIs.\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed (modify read_ in JS)');\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify setWindowTitle in JS)');\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\nlegacyModuleProp('read', 'read_');\nlegacyModuleProp('readAsync', 'readAsync');\nlegacyModuleProp('readBinary', 'readBinary');\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n\nassert(!ENVIRONMENT_IS_SHELL, \"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");\n\n\n\n\nvar STACK_ALIGN = 16;\nvar POINTER_SIZE = 4;\n\nfunction getNativeTypeSize(type) {\n  switch (type) {\n    case 'i1': case 'i8': case 'u8': return 1;\n    case 'i16': case 'u16': return 2;\n    case 'i32': case 'u32': return 4;\n    case 'i64': case 'u64': return 8;\n    case 'float': return 4;\n    case 'double': return 8;\n    default: {\n      if (type[type.length - 1] === '*') {\n        return POINTER_SIZE;\n      }\n      if (type[0] === 'i') {\n        const bits = Number(type.substr(1));\n        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);\n        return bits / 8;\n      }\n      return 0;\n    }\n  }\n}\n\n// include: runtime_debug.js\n\n\nfunction legacyModuleProp(prop, newName) {\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n    Object.defineProperty(Module, prop, {\n      configurable: true,\n      get: function() {\n        abort('Module.' + prop + ' has been replaced with plain ' + newName + ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)');\n      }\n    });\n  }\n}\n\nfunction ignoredModuleProp(prop) {\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\n    abort('`Module.' + prop + '` was supplied but `' + prop + '` not included in INCOMING_MODULE_JS_API');\n  }\n}\n\n// forcing the filesystem exports a few things by default\nfunction isExportedByForceFilesystem(name) {\n  return name === 'FS_createPath' ||\n         name === 'FS_createDataFile' ||\n         name === 'FS_createPreloadedFile' ||\n         name === 'FS_unlink' ||\n         name === 'addRunDependency' ||\n         // The old FS has some functionality that WasmFS lacks.\n         name === 'FS_createLazyFile' ||\n         name === 'FS_createDevice' ||\n         name === 'removeRunDependency';\n}\n\nfunction missingLibrarySymbol(sym) {\n  if (typeof globalThis !== 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {\n    Object.defineProperty(globalThis, sym, {\n      configurable: true,\n      get: function() {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = '`' + sym + '` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line';\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += \" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\" + librarySymbol + \")\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n        return undefined;\n      }\n    });\n  }\n}\n\nfunction unexportedRuntimeSymbol(sym) {\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n    Object.defineProperty(Module, sym, {\n      configurable: true,\n      get: function() {\n        var msg = \"'\" + sym + \"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        abort(msg);\n      }\n    });\n  }\n}\n\n// end include: runtime_debug.js\n\n\n// === Preamble library stuff ===\n\n// Documentation for the public APIs defined in this file must be updated in:\n//    site/source/docs/api_reference/preamble.js.rst\n// A prebuilt local version of the documentation is available at:\n//    site/build/text/docs/api_reference/preamble.js.txt\n// You can also build docs locally as HTML or other formats in site/\n// An online HTML version (which may be of a different version of Emscripten)\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\nvar wasmBinary;\nif (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\nvar noExitRuntime = Module['noExitRuntime'] || true;legacyModuleProp('noExitRuntime', 'noExitRuntime');\n\nif (typeof WebAssembly != 'object') {\n  abort('no native wasm support detected');\n}\n\n// Wasm globals\n\nvar wasmMemory;\n\n//========================================\n// Runtime essentials\n//========================================\n\n// whether we are quitting the application. no code should run after this.\n// set in exit() and abort()\nvar ABORT = false;\n\n// set by exit() and abort().  Passed to 'onExit' handler.\n// NOTE: This is also used as the process return code code in shell environments\n// but only when noExitRuntime is false.\nvar EXITSTATUS;\n\n/** @type {function(*, string=)} */\nfunction assert(condition, text) {\n  if (!condition) {\n    abort('Assertion failed' + (text ? ': ' + text : ''));\n  }\n}\n\n// We used to include malloc/free by default in the past. Show a helpful error in\n// builds with assertions.\nfunction _malloc() {\n  abort(\"malloc() called but not included in the build - add '_malloc' to EXPORTED_FUNCTIONS\");\n}\nfunction _free() {\n  // Show a helpful error since we used to include free by default in the past.\n  abort(\"free() called but not included in the build - add '_free' to EXPORTED_FUNCTIONS\");\n}\n\n// include: runtime_strings.js\n\n\n// runtime_strings.js: String related runtime functions that are part of both\n// MINIMAL_RUNTIME and regular runtime.\n\nvar UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n/**\n * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\n * array that contains uint8 values, returns a copy of that string as a\n * Javascript String object.\n * heapOrArray is either a regular array, or a JavaScript typed array view.\n * @param {number} idx\n * @param {number=} maxBytesToRead\n * @return {string}\n */\nfunction UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  // TextDecoder needs to know the byte length in advance, it doesn't stop on\n  // null terminator by itself.  Also, use the length info to avoid running tiny\n  // strings through TextDecoder, since .subarray() allocates garbage.\n  // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n  // so that undefined means Infinity)\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n  if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n    return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n  }\n  var str = '';\n  // If building with TextDecoder, we have already computed the string length\n  // above, so test loop end condition against that\n  while (idx < endPtr) {\n    // For UTF8 byte structure, see:\n    // http://en.wikipedia.org/wiki/UTF-8#Description\n    // https://www.ietf.org/rfc/rfc2279.txt\n    // https://tools.ietf.org/html/rfc3629\n    var u0 = heapOrArray[idx++];\n    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\n    var u1 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\n    var u2 = heapOrArray[idx++] & 63;\n    if ((u0 & 0xF0) == 0xE0) {\n      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n    } else {\n      if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n      u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\n    }\n\n    if (u0 < 0x10000) {\n      str += String.fromCharCode(u0);\n    } else {\n      var ch = u0 - 0x10000;\n      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\n    }\n  }\n  return str;\n}\n\n/**\n * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\n * emscripten HEAP, returns a copy of that string as a Javascript String object.\n *\n * @param {number} ptr\n * @param {number=} maxBytesToRead - An optional length that specifies the\n *   maximum number of bytes to read. You can omit this parameter to scan the\n *   string until the first \\0 byte. If maxBytesToRead is passed, and the string\n *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\n *   string will cut short at that byte index (i.e. maxBytesToRead will not\n *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\n *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\n *   JS JIT optimizations off, so it is worth to consider consistently using one\n * @return {string}\n */\nfunction UTF8ToString(ptr, maxBytesToRead) {\n  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n}\n\n/**\n * Copies the given Javascript String object 'str' to the given byte array at\n * address 'outIdx', encoded in UTF8 form and null-terminated. The copy will\n * require at most str.length*4+1 bytes of space in the HEAP.  Use the function\n * lengthBytesUTF8 to compute the exact number of bytes (excluding null\n * terminator) that this function will write.\n *\n * @param {string} str - The Javascript string to copy.\n * @param {ArrayBufferView|Array<number>} heap - The array to copy to. Each\n *                                               index in this array is assumed\n *                                               to be one 8-byte element.\n * @param {number} outIdx - The starting offset in the array to begin the copying.\n * @param {number} maxBytesToWrite - The maximum number of bytes this function\n *                                   can write to the array.  This count should\n *                                   include the null terminator, i.e. if\n *                                   maxBytesToWrite=1, only the null terminator\n *                                   will be written and nothing else.\n *                                   maxBytesToWrite=0 does not write any bytes\n *                                   to the output, not even the null\n *                                   terminator.\n * @return {number} The number of bytes written, EXCLUDING the null terminator.\n */\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n  // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n  // undefined and false each don't write out any bytes.\n  if (!(maxBytesToWrite > 0))\n    return 0;\n\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n    // and https://www.ietf.org/rfc/rfc2279.txt\n    // and https://tools.ietf.org/html/rfc3629\n    var u = str.charCodeAt(i); // possibly a lead surrogate\n    if (u >= 0xD800 && u <= 0xDFFF) {\n      var u1 = str.charCodeAt(++i);\n      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\n    }\n    if (u <= 0x7F) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u;\n    } else if (u <= 0x7FF) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 0xC0 | (u >> 6);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else if (u <= 0xFFFF) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 0xE0 | (u >> 12);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n      heap[outIdx++] = 0xF0 | (u >> 18);\n      heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n      heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n      heap[outIdx++] = 0x80 | (u & 63);\n    }\n  }\n  // Null-terminate the pointer to the buffer.\n  heap[outIdx] = 0;\n  return outIdx - startIdx;\n}\n\n/**\n * Copies the given Javascript String object 'str' to the emscripten HEAP at\n * address 'outPtr', null-terminated and encoded in UTF8 form. The copy will\n * require at most str.length*4+1 bytes of space in the HEAP.\n * Use the function lengthBytesUTF8 to compute the exact number of bytes\n * (excluding null terminator) that this function will write.\n *\n * @return {number} The number of bytes written, EXCLUDING the null terminator.\n */\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');\n  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);\n}\n\n/**\n * Returns the number of bytes the given Javascript string takes if encoded as a\n * UTF8 byte array, EXCLUDING the null terminator byte.\n *\n * @param {string} str - JavaScript string to operator on\n * @return {number} Length, in bytes, of the UTF8 encoded string.\n */\nfunction lengthBytesUTF8(str) {\n  var len = 0;\n  for (var i = 0; i < str.length; ++i) {\n    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n    // unit, not a Unicode code point of the character! So decode\n    // UTF16->UTF32->UTF8.\n    // See http://unicode.org/faq/utf_bom.html#utf16-3\n    var c = str.charCodeAt(i); // possibly a lead surrogate\n    if (c <= 0x7F) {\n      len++;\n    } else if (c <= 0x7FF) {\n      len += 2;\n    } else if (c >= 0xD800 && c <= 0xDFFF) {\n      len += 4; ++i;\n    } else {\n      len += 3;\n    }\n  }\n  return len;\n}\n\n// end include: runtime_strings.js\n// Memory management\n\nvar HEAP,\n/** @type {!ArrayBuffer} */\n  buffer,\n/** @type {!Int8Array} */\n  HEAP8,\n/** @type {!Uint8Array} */\n  HEAPU8,\n/** @type {!Int16Array} */\n  HEAP16,\n/** @type {!Uint16Array} */\n  HEAPU16,\n/** @type {!Int32Array} */\n  HEAP32,\n/** @type {!Uint32Array} */\n  HEAPU32,\n/** @type {!Float32Array} */\n  HEAPF32,\n/** @type {!Float64Array} */\n  HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n  buffer = buf;\n  Module['HEAP8'] = HEAP8 = new Int8Array(buf);\n  Module['HEAP16'] = HEAP16 = new Int16Array(buf);\n  Module['HEAP32'] = HEAP32 = new Int32Array(buf);\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buf);\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buf);\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buf);\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(buf);\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(buf);\n}\n\nvar STACK_SIZE = 65536;\nif (Module['STACK_SIZE']) assert(STACK_SIZE === Module['STACK_SIZE'], 'the stack size can no longer be determined at runtime')\n\nvar INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;legacyModuleProp('INITIAL_MEMORY', 'INITIAL_MEMORY');\n\nassert(INITIAL_MEMORY >= STACK_SIZE, 'INITIAL_MEMORY should be larger than STACK_SIZE, was ' + INITIAL_MEMORY + '! (STACK_SIZE=' + STACK_SIZE + ')');\n\n// check for full engine support (use string 'subarray' to avoid closure compiler confusion)\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\n       'JS engine does not provide full typed array support');\n\n// If memory is defined in wasm, the user can't provide it.\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\nassert(INITIAL_MEMORY == 16777216, 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n// include: runtime_init_table.js\n// In regular non-RELOCATABLE mode the table is exported\n// from the wasm module and this will be assigned once\n// the exports are available.\nvar wasmTable;\n\n// end include: runtime_init_table.js\n// include: runtime_stack_check.js\n\n\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\nfunction writeStackCookie() {\n  var max = _emscripten_stack_get_end();\n  assert((max & 3) == 0);\n  // If the stack ends at address zero we write our cookies 4 bytes into the\n  // stack.  This prevents interference with the (separate) address-zero check\n  // below.\n  if (max == 0) {\n    max += 4;\n  }\n  // The stack grow downwards towards _emscripten_stack_get_end.\n  // We write cookies to the final two words in the stack and detect if they are\n  // ever overwritten.\n  HEAPU32[((max)>>2)] = 0x2135467;\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\n  // Also test the global address 0 for integrity.\n  HEAPU32[0] = 0x63736d65; /* 'emsc' */\n}\n\nfunction checkStackCookie() {\n  if (ABORT) return;\n  var max = _emscripten_stack_get_end();\n  // See writeStackCookie().\n  if (max == 0) {\n    max += 4;\n  }\n  var cookie1 = HEAPU32[((max)>>2)];\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\n  if (cookie1 != 0x2135467 || cookie2 != 0x89BACDFE) {\n    abort('Stack overflow! Stack cookie has been overwritten at ' + ptrToString(max) + ', expected hex dwords 0x89BACDFE and 0x2135467, but received ' + ptrToString(cookie2) + ' ' + ptrToString(cookie1));\n  }\n  // Also test the global address 0 for integrity.\n  if (HEAPU32[0] !== 0x63736d65 /* 'emsc' */) {\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n  }\n}\n\n// end include: runtime_stack_check.js\n// include: runtime_assertions.js\n\n\n// Endianness check\n(function() {\n  var h16 = new Int16Array(1);\n  var h8 = new Int8Array(h16.buffer);\n  h16[0] = 0x6373;\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n})();\n\n// end include: runtime_assertions.js\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\nvar __ATINIT__    = []; // functions called during startup\nvar __ATEXIT__    = []; // functions called during shutdown\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\n\nvar runtimeInitialized = false;\n\nfunction keepRuntimeAlive() {\n  return noExitRuntime;\n}\n\nfunction preRun() {\n\n  if (Module['preRun']) {\n    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];\n    while (Module['preRun'].length) {\n      addOnPreRun(Module['preRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n  assert(!runtimeInitialized);\n  runtimeInitialized = true;\n\n  checkStackCookie();\n\n  \n  callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction postRun() {\n  checkStackCookie();\n\n  if (Module['postRun']) {\n    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];\n    while (Module['postRun'].length) {\n      addOnPostRun(Module['postRun'].shift());\n    }\n  }\n\n  callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n  __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnInit(cb) {\n  __ATINIT__.unshift(cb);\n}\n\nfunction addOnExit(cb) {\n}\n\nfunction addOnPostRun(cb) {\n  __ATPOSTRUN__.unshift(cb);\n}\n\n// include: runtime_math.js\n\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n\n// end include: runtime_math.js\n// A counter of dependencies for calling run(). If we need to\n// do asynchronous work before running, increment this and\n// decrement it. Incrementing must happen in a place like\n// Module.preRun (used by emcc to add file preloading).\n// Note that you can add dependencies in preRun, even though\n// it happens right before run - run will be postponed until\n// the dependencies are met.\nvar runDependencies = 0;\nvar runDependencyWatcher = null;\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\nvar runDependencyTracking = {};\n\nfunction getUniqueRunDependency(id) {\n  var orig = id;\n  while (1) {\n    if (!runDependencyTracking[id]) return id;\n    id = orig + Math.random();\n  }\n}\n\nfunction addRunDependency(id) {\n  runDependencies++;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(!runDependencyTracking[id]);\n    runDependencyTracking[id] = 1;\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n      // Check for missing dependencies every few seconds\n      runDependencyWatcher = setInterval(function() {\n        if (ABORT) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n          return;\n        }\n        var shown = false;\n        for (var dep in runDependencyTracking) {\n          if (!shown) {\n            shown = true;\n            err('still waiting on run dependencies:');\n          }\n          err('dependency: ' + dep);\n        }\n        if (shown) {\n          err('(end of list)');\n        }\n      }, 10000);\n    }\n  } else {\n    err('warning: run dependency added without ID');\n  }\n}\n\nfunction removeRunDependency(id) {\n  runDependencies--;\n\n  if (Module['monitorRunDependencies']) {\n    Module['monitorRunDependencies'](runDependencies);\n  }\n\n  if (id) {\n    assert(runDependencyTracking[id]);\n    delete runDependencyTracking[id];\n  } else {\n    err('warning: run dependency removed without ID');\n  }\n  if (runDependencies == 0) {\n    if (runDependencyWatcher !== null) {\n      clearInterval(runDependencyWatcher);\n      runDependencyWatcher = null;\n    }\n    if (dependenciesFulfilled) {\n      var callback = dependenciesFulfilled;\n      dependenciesFulfilled = null;\n      callback(); // can add another dependenciesFulfilled\n    }\n  }\n}\n\n/** @param {string|number=} what */\nfunction abort(what) {\n  if (Module['onAbort']) {\n    Module['onAbort'](what);\n  }\n\n  what = 'Aborted(' + what + ')';\n  // TODO(sbc): Should we remove printing and leave it up to whoever\n  // catches the exception?\n  err(what);\n\n  ABORT = true;\n  EXITSTATUS = 1;\n\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\n  // exception, which means we'd run destructors on it. We need the error to\n  // simply make the program stop.\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n  // a trap or not based on a hidden field within the object. So at the moment\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n  // allows this in the wasm spec.\n\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\n  // defintion for WebAssembly.RuntimeError claims it takes no arguments even\n  // though it can.\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n  /** @suppress {checkTypes} */\n  var e = new WebAssembly.RuntimeError(what);\n\n  readyPromiseReject(e);\n  // Throw the error whether or not MODULARIZE is set because abort is used\n  // in code paths apart from instantiation where an exception is expected\n  // to be thrown when abort is called.\n  throw e;\n}\n\n// {{MEM_INITIALIZER}}\n\n// include: memoryprofiler.js\n\n\n// end include: memoryprofiler.js\n// show errors on likely calls to FS when it was not included\nvar FS = {\n  error: function() {\n    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM');\n  },\n  init: function() { FS.error() },\n  createDataFile: function() { FS.error() },\n  createPreloadedFile: function() { FS.error() },\n  createLazyFile: function() { FS.error() },\n  open: function() { FS.error() },\n  mkdev: function() { FS.error() },\n  registerDevice: function() { FS.error() },\n  analyzePath: function() { FS.error() },\n  loadFilesFromDB: function() { FS.error() },\n\n  ErrnoError: function ErrnoError() { FS.error() },\n};\nModule['FS_createDataFile'] = FS.createDataFile;\nModule['FS_createPreloadedFile'] = FS.createPreloadedFile;\n\n// include: URIUtils.js\n\n\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\n\n// Indicates whether filename is a base64 data URI.\nfunction isDataURI(filename) {\n  // Prefix of data URIs emitted by SINGLE_FILE and related options.\n  return filename.startsWith(dataURIPrefix);\n}\n\n// Indicates whether filename is delivered via file protocol (as opposed to http/https)\nfunction isFileURI(filename) {\n  return filename.startsWith('file://');\n}\n\n// end include: URIUtils.js\n/** @param {boolean=} fixedasm */\nfunction createExportWrapper(name, fixedasm) {\n  return function() {\n    var displayName = name;\n    var asm = fixedasm;\n    if (!fixedasm) {\n      asm = Module['asm'];\n    }\n    assert(runtimeInitialized, 'native function `' + displayName + '` called before runtime initialization');\n    if (!asm[name]) {\n      assert(asm[name], 'exported native function `' + displayName + '` not found');\n    }\n    return asm[name].apply(null, arguments);\n  };\n}\n\nvar wasmBinaryFile;\n  wasmBinaryFile = 'libfftw3.wasm';\n  if (!isDataURI(wasmBinaryFile)) {\n    wasmBinaryFile = locateFile(wasmBinaryFile);\n  }\n\nfunction getBinary(file) {\n  try {\n    if (file == wasmBinaryFile && wasmBinary) {\n      return new Uint8Array(wasmBinary);\n    }\n    if (readBinary) {\n      return readBinary(file);\n    }\n    throw \"both async and sync fetching of the wasm failed\";\n  }\n  catch (err) {\n    abort(err);\n  }\n}\n\nfunction getBinaryPromise() {\n  // If we don't have the binary yet, try to to load it asynchronously.\n  // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n  // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n  // Cordova or Electron apps are typically loaded from a file:// url.\n  // So use fetch if it is available and the url is not a file, otherwise fall back to XHR.\n  if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n    if (typeof fetch == 'function'\n      && !isFileURI(wasmBinaryFile)\n    ) {\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n        if (!response['ok']) {\n          throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n        }\n        return response['arrayBuffer']();\n      }).catch(function () {\n          return getBinary(wasmBinaryFile);\n      });\n    }\n    else {\n      if (readAsync) {\n        // fetch is not available or url is file => try XHR (readAsync uses XHR internally)\n        return new Promise(function(resolve, reject) {\n          readAsync(wasmBinaryFile, function(response) { resolve(new Uint8Array(/** @type{!ArrayBuffer} */(response))) }, reject)\n        });\n      }\n    }\n  }\n\n  // Otherwise, getBinary should be able to get it synchronously\n  return Promise.resolve().then(function() { return getBinary(wasmBinaryFile); });\n}\n\n// Create the wasm instance.\n// Receives the wasm imports, returns the exports.\nfunction createWasm() {\n  // prepare imports\n  var info = {\n    'env': asmLibraryArg,\n    'wasi_snapshot_preview1': asmLibraryArg,\n  };\n  // Load the wasm module and create an instance of using native support in the JS engine.\n  // handle a generated wasm instance, receiving its exports and\n  // performing other necessary setup\n  /** @param {WebAssembly.Module=} module*/\n  function receiveInstance(instance, module) {\n    var exports = instance.exports;\n\n    Module['asm'] = exports;\n\n    wasmMemory = Module['asm']['memory'];\n    assert(wasmMemory, \"memory not found in wasm exports\");\n    // This assertion doesn't hold when emscripten is run in --post-link\n    // mode.\n    // TODO(sbc): Read INITIAL_MEMORY out of the wasm file in post-link mode.\n    //assert(wasmMemory.buffer.byteLength === 16777216);\n    updateGlobalBufferAndViews(wasmMemory.buffer);\n\n    wasmTable = Module['asm']['__indirect_function_table'];\n    assert(wasmTable, \"table not found in wasm exports\");\n\n    addOnInit(Module['asm']['__wasm_call_ctors']);\n\n    removeRunDependency('wasm-instantiate');\n\n  }\n  // we can't run yet (except in a pthread, where we have a custom sync instantiator)\n  addRunDependency('wasm-instantiate');\n\n  // Prefer streaming instantiation if available.\n  // Async compilation can be confusing when an error on the page overwrites Module\n  // (for example, if the order of elements is wrong, and the one defining Module is\n  // later), so we save Module and check it later.\n  var trueModule = Module;\n  function receiveInstantiationResult(result) {\n    // 'result' is a ResultObject object which has both the module and instance.\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n    trueModule = null;\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n    // When the regression is fixed, can restore the above USE_PTHREADS-enabled path.\n    receiveInstance(result['instance']);\n  }\n\n  function instantiateArrayBuffer(receiver) {\n    return getBinaryPromise().then(function(binary) {\n      return WebAssembly.instantiate(binary, info);\n    }).then(function (instance) {\n      return instance;\n    }).then(receiver, function(reason) {\n      err('failed to asynchronously prepare wasm: ' + reason);\n\n      // Warn on some common problems.\n      if (isFileURI(wasmBinaryFile)) {\n        err('warning: Loading from a file URI (' + wasmBinaryFile + ') is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing');\n      }\n      abort(reason);\n    });\n  }\n\n  function instantiateAsync() {\n    if (!wasmBinary &&\n        typeof WebAssembly.instantiateStreaming == 'function' &&\n        !isDataURI(wasmBinaryFile) &&\n        // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n        !isFileURI(wasmBinaryFile) &&\n        // Avoid instantiateStreaming() on Node.js environment for now, as while\n        // Node.js v18.1.0 implements it, it does not have a full fetch()\n        // implementation yet.\n        //\n        // Reference:\n        //   https://github.com/emscripten-core/emscripten/pull/16917\n        !ENVIRONMENT_IS_NODE &&\n        typeof fetch == 'function') {\n      return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(function(response) {\n        // Suppress closure warning here since the upstream definition for\n        // instantiateStreaming only allows Promise<Repsponse> rather than\n        // an actual Response.\n        // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n        /** @suppress {checkTypes} */\n        var result = WebAssembly.instantiateStreaming(response, info);\n\n        return result.then(\n          receiveInstantiationResult,\n          function(reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err('wasm streaming compile failed: ' + reason);\n            err('falling back to ArrayBuffer instantiation');\n            return instantiateArrayBuffer(receiveInstantiationResult);\n          });\n      });\n    } else {\n      return instantiateArrayBuffer(receiveInstantiationResult);\n    }\n  }\n\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n  // to manually instantiate the Wasm module themselves. This allows pages to run the instantiation parallel\n  // to any other async startup actions they are performing.\n  // Also pthreads and wasm workers initialize the wasm instance through this path.\n  if (Module['instantiateWasm']) {\n    try {\n      var exports = Module['instantiateWasm'](info, receiveInstance);\n      return exports;\n    } catch(e) {\n      err('Module.instantiateWasm callback failed with error: ' + e);\n        // If instantiation fails, reject the module ready promise.\n        readyPromiseReject(e);\n    }\n  }\n\n  // If instantiation fails, reject the module ready promise.\n  instantiateAsync().catch(readyPromiseReject);\n  return {}; // no exports yet; we'll fill them in later\n}\n\n// Globals used by JS i64 conversions (see makeSetValue)\nvar tempDouble;\nvar tempI64;\n\n// === Body ===\n\nvar ASM_CONSTS = {\n  \n};\n\n\n\n\n\n  /** @constructor */\n  function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n  function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        // Pass the module as the first argument.\n        callbacks.shift()(Module);\n      }\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {string} type\n     */\n  function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1': return HEAP8[((ptr)>>0)];\n        case 'i8': return HEAP8[((ptr)>>0)];\n        case 'i16': return HEAP16[((ptr)>>1)];\n        case 'i32': return HEAP32[((ptr)>>2)];\n        case 'i64': return HEAP32[((ptr)>>2)];\n        case 'float': return HEAPF32[((ptr)>>2)];\n        case 'double': return HEAPF64[((ptr)>>3)];\n        case '*': return HEAPU32[((ptr)>>2)];\n        default: abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n  function ptrToString(ptr) {\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    }\n\n  \n    /**\n     * @param {number} ptr\n     * @param {number} value\n     * @param {string} type\n     */\n  function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1': HEAP8[((ptr)>>0)] = value; break;\n        case 'i8': HEAP8[((ptr)>>0)] = value; break;\n        case 'i16': HEAP16[((ptr)>>1)] = value; break;\n        case 'i32': HEAP32[((ptr)>>2)] = value; break;\n        case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? ((Math.min((+(Math.floor((tempDouble)/4294967296.0))), 4294967295.0))|0)>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)],HEAP32[((ptr)>>2)] = tempI64[0],HEAP32[(((ptr)+(4))>>2)] = tempI64[1]); break;\n        case 'float': HEAPF32[((ptr)>>2)] = value; break;\n        case 'double': HEAPF64[((ptr)>>3)] = value; break;\n        case '*': HEAPU32[((ptr)>>2)] = value; break;\n        default: abort('invalid type for setValue: ' + type);\n      }\n    }\n\n  function warnOnce(text) {\n      if (!warnOnce.shown) warnOnce.shown = {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    }\n\n  var nowIsMonotonic = true;;\n  function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n  function _abort() {\n      abort('native code called abort()');\n    }\n\n  function _emscripten_date_now() {\n      return Date.now();\n    }\n\n  var _emscripten_get_now;if (ENVIRONMENT_IS_NODE) {\n    _emscripten_get_now = () => {\n      var t = process['hrtime']();\n      return t[0] * 1e3 + t[1] / 1e6;\n    };\n  } else _emscripten_get_now = () => performance.now();\n  ;\n\n  function _emscripten_memcpy_big(dest, src, num) {\n      HEAPU8.copyWithin(dest, src, src + num);\n    }\n\n  function getHeapMax() {\n      return HEAPU8.length;\n    }\n  \n  function abortOnCannotGrowMemory(requestedSize) {\n      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ' + HEAP8.length + ', (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0');\n    }\n  function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n      abortOnCannotGrowMemory(requestedSize);\n    }\n\n  var SYSCALLS = {varargs:undefined,get:function() {\n        assert(SYSCALLS.varargs != undefined);\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];\n        return ret;\n      },getStr:function(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }};\n  function _fd_close(fd) {\n      abort('fd_close called without SYSCALLS_REQUIRE_FILESYSTEM');\n    }\n\n  function convertI32PairToI53Checked(lo, hi) {\n      assert(lo == (lo >>> 0) || lo == (lo|0)); // lo should either be a i32 or a u32\n      assert(hi === (hi|0));                    // hi should be a i32\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\n    }\n  function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      return 70;\n    }\n\n  var printCharBuffers = [null,[],[]];\n  function printChar(stream, curr) {\n      var buffer = printCharBuffers[stream];\n      assert(buffer);\n      if (curr === 0 || curr === 10) {\n        (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n        buffer.length = 0;\n      } else {\n        buffer.push(curr);\n      }\n    }\n  function flush_NO_FILESYSTEM() {\n      // flush anything remaining in the buffers during shutdown\n      _fflush(0);\n      if (printCharBuffers[1].length) printChar(1, 10);\n      if (printCharBuffers[2].length) printChar(2, 10);\n    }\n  function _fd_write(fd, iov, iovcnt, pnum) {\n      // hack to support printf in SYSCALLS_REQUIRE_FILESYSTEM=0\n      var num = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[((iov)>>2)];\n        var len = HEAPU32[(((iov)+(4))>>2)];\n        iov += 8;\n        for (var j = 0; j < len; j++) {\n          printChar(fd, HEAPU8[ptr+j]);\n        }\n        num += len;\n      }\n      HEAPU32[((pnum)>>2)] = num;\n      return 0;\n    }\n\n  function getCFunc(ident) {\n      var func = Module['_' + ident]; // closure exported function\n      assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');\n      return func;\n    }\n  \n  function writeArrayToMemory(array, buffer) {\n      assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')\n      HEAP8.set(array, buffer);\n    }\n  \n    /**\n     * @param {string|null=} returnType\n     * @param {Array=} argTypes\n     * @param {Arguments|Array=} args\n     * @param {Object=} opts\n     */\n  function ccall(ident, returnType, argTypes, args, opts) {\n      // For fast lookup of conversion functions\n      var toC = {\n        'string': (str) => {\n          var ret = 0;\n          if (str !== null && str !== undefined && str !== 0) { // null string\n            // at most 4 bytes per UTF-8 code point, +1 for the trailing '\\0'\n            var len = (str.length << 2) + 1;\n            ret = stackAlloc(len);\n            stringToUTF8(str, ret, len);\n          }\n          return ret;\n        },\n        'array': (arr) => {\n          var ret = stackAlloc(arr.length);\n          writeArrayToMemory(arr, ret);\n          return ret;\n        }\n      };\n  \n      function convertReturnValue(ret) {\n        if (returnType === 'string') {\n          \n          return UTF8ToString(ret);\n        }\n        if (returnType === 'boolean') return Boolean(ret);\n        return ret;\n      }\n  \n      var func = getCFunc(ident);\n      var cArgs = [];\n      var stack = 0;\n      assert(returnType !== 'array', 'Return type should not be \"array\".');\n      if (args) {\n        for (var i = 0; i < args.length; i++) {\n          var converter = toC[argTypes[i]];\n          if (converter) {\n            if (stack === 0) stack = stackSave();\n            cArgs[i] = converter(args[i]);\n          } else {\n            cArgs[i] = args[i];\n          }\n        }\n      }\n      var ret = func.apply(null, cArgs);\n      function onDone(ret) {\n        if (stack !== 0) stackRestore(stack);\n        return convertReturnValue(ret);\n      }\n  \n      ret = onDone(ret);\n      return ret;\n    }\n\n  \n    /**\n     * @param {string=} returnType\n     * @param {Array=} argTypes\n     * @param {Object=} opts\n     */\n  function cwrap(ident, returnType, argTypes, opts) {\n      return function() {\n        return ccall(ident, returnType, argTypes, arguments, opts);\n      }\n    }\nvar ASSERTIONS = true;\n\nfunction checkIncomingModuleAPI() {\n  ignoredModuleProp('fetchSettings');\n}\nvar asmLibraryArg = {\n  \"_emscripten_get_now_is_monotonic\": __emscripten_get_now_is_monotonic,\n  \"abort\": _abort,\n  \"emscripten_date_now\": _emscripten_date_now,\n  \"emscripten_get_now\": _emscripten_get_now,\n  \"emscripten_memcpy_big\": _emscripten_memcpy_big,\n  \"emscripten_resize_heap\": _emscripten_resize_heap,\n  \"fd_close\": _fd_close,\n  \"fd_seek\": _fd_seek,\n  \"fd_write\": _fd_write\n};\nvar asm = createWasm();\n/** @type {function(...*):?} */\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = createExportWrapper(\"__wasm_call_ctors\");\n\n/** @type {function(...*):?} */\nvar _fftwf_destroy_plan = Module[\"_fftwf_destroy_plan\"] = createExportWrapper(\"fftwf_destroy_plan\");\n\n/** @type {function(...*):?} */\nvar _fftwf_execute = Module[\"_fftwf_execute\"] = createExportWrapper(\"fftwf_execute\");\n\n/** @type {function(...*):?} */\nvar _fftwf_malloc = Module[\"_fftwf_malloc\"] = createExportWrapper(\"fftwf_malloc\");\n\n/** @type {function(...*):?} */\nvar _fftwf_free = Module[\"_fftwf_free\"] = createExportWrapper(\"fftwf_free\");\n\n/** @type {function(...*):?} */\nvar _fftwf_plan_dft_1d = Module[\"_fftwf_plan_dft_1d\"] = createExportWrapper(\"fftwf_plan_dft_1d\");\n\n/** @type {function(...*):?} */\nvar _fftwf_plan_dft_2d = Module[\"_fftwf_plan_dft_2d\"] = createExportWrapper(\"fftwf_plan_dft_2d\");\n\n/** @type {function(...*):?} */\nvar _fftwf_plan_dft_c2r_1d = Module[\"_fftwf_plan_dft_c2r_1d\"] = createExportWrapper(\"fftwf_plan_dft_c2r_1d\");\n\n/** @type {function(...*):?} */\nvar _fftwf_plan_dft_r2c_1d = Module[\"_fftwf_plan_dft_r2c_1d\"] = createExportWrapper(\"fftwf_plan_dft_r2c_1d\");\n\n/** @type {function(...*):?} */\nvar _fftwf_plan_r2r_1d = Module[\"_fftwf_plan_r2r_1d\"] = createExportWrapper(\"fftwf_plan_r2r_1d\");\n\n/** @type {function(...*):?} */\nvar _fftwf_plan_r2r_2d = Module[\"_fftwf_plan_r2r_2d\"] = createExportWrapper(\"fftwf_plan_r2r_2d\");\n\n/** @type {function(...*):?} */\nvar ___errno_location = Module[\"___errno_location\"] = createExportWrapper(\"__errno_location\");\n\n/** @type {function(...*):?} */\nvar _fflush = Module[\"_fflush\"] = createExportWrapper(\"fflush\");\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_init = Module[\"_emscripten_stack_init\"] = function() {\n  return (_emscripten_stack_init = Module[\"_emscripten_stack_init\"] = Module[\"asm\"][\"emscripten_stack_init\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = function() {\n  return (_emscripten_stack_get_free = Module[\"_emscripten_stack_get_free\"] = Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = function() {\n  return (_emscripten_stack_get_base = Module[\"_emscripten_stack_get_base\"] = Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = function() {\n  return (_emscripten_stack_get_end = Module[\"_emscripten_stack_get_end\"] = Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar stackSave = Module[\"stackSave\"] = createExportWrapper(\"stackSave\");\n\n/** @type {function(...*):?} */\nvar stackRestore = Module[\"stackRestore\"] = createExportWrapper(\"stackRestore\");\n\n/** @type {function(...*):?} */\nvar stackAlloc = Module[\"stackAlloc\"] = createExportWrapper(\"stackAlloc\");\n\n/** @type {function(...*):?} */\nvar _emscripten_stack_get_current = Module[\"_emscripten_stack_get_current\"] = function() {\n  return (_emscripten_stack_get_current = Module[\"_emscripten_stack_get_current\"] = Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null, arguments);\n};\n\n/** @type {function(...*):?} */\nvar dynCall_jiji = Module[\"dynCall_jiji\"] = createExportWrapper(\"dynCall_jiji\");\n\n\n\n\n\n// === Auto-generated postamble setup entry stuff ===\n\nModule[\"ccall\"] = ccall;\nModule[\"cwrap\"] = cwrap;\nvar unexportedRuntimeSymbols = [\n  'run',\n  'UTF8ArrayToString',\n  'UTF8ToString',\n  'stringToUTF8Array',\n  'stringToUTF8',\n  'lengthBytesUTF8',\n  'addOnPreRun',\n  'addOnInit',\n  'addOnPreMain',\n  'addOnExit',\n  'addOnPostRun',\n  'addRunDependency',\n  'removeRunDependency',\n  'FS_createFolder',\n  'FS_createPath',\n  'FS_createDataFile',\n  'FS_createPreloadedFile',\n  'FS_createLazyFile',\n  'FS_createLink',\n  'FS_createDevice',\n  'FS_unlink',\n  'getLEB',\n  'getFunctionTables',\n  'alignFunctionTables',\n  'registerFunctions',\n  'prettyPrint',\n  'getCompilerSetting',\n  'out',\n  'err',\n  'callMain',\n  'abort',\n  'keepRuntimeAlive',\n  'wasmMemory',\n  'stackAlloc',\n  'stackSave',\n  'stackRestore',\n  'getTempRet0',\n  'setTempRet0',\n  'writeStackCookie',\n  'checkStackCookie',\n  'ptrToString',\n  'zeroMemory',\n  'stringToNewUTF8',\n  'exitJS',\n  'getHeapMax',\n  'abortOnCannotGrowMemory',\n  'emscripten_realloc_buffer',\n  'ENV',\n  'ERRNO_CODES',\n  'ERRNO_MESSAGES',\n  'setErrNo',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'DNS',\n  'getHostByName',\n  'Protocols',\n  'Sockets',\n  'getRandomDevice',\n  'warnOnce',\n  'traverseStack',\n  'UNWIND_CACHE',\n  'convertPCtoSourceLocation',\n  'readEmAsmArgsArray',\n  'readEmAsmArgs',\n  'runEmAsmFunction',\n  'runMainThreadEmAsm',\n  'jstoi_q',\n  'jstoi_s',\n  'getExecutableName',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'safeSetTimeout',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertI32PairToI53Checked',\n  'convertU32PairToI53',\n  'getCFunc',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'freeTableIndexes',\n  'functionsInTableMap',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'setValue',\n  'getValue',\n  'PATH',\n  'PATH_FS',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToAscii',\n  'UTF16Decoder',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'writeStringToMemory',\n  'writeArrayToMemory',\n  'writeAsciiToMemory',\n  'SYSCALLS',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'JSEvents',\n  'registerKeyEventCallback',\n  'specialHTMLTargets',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'findCanvasEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'currentFullscreenStrategy',\n  'restoreOldWindowedStyle',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'demangle',\n  'demangleAll',\n  'jsStackTrace',\n  'stackTrace',\n  'ExitStatus',\n  'getEnvStrings',\n  'checkWasiClock',\n  'flush_NO_FILESYSTEM',\n  'dlopenMissingError',\n  'createDyncallWrapper',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'uncaughtExceptionCount',\n  'exceptionLast',\n  'exceptionCaught',\n  'ExceptionInfo',\n  'exception_addRef',\n  'exception_decRef',\n  'Browser',\n  'setMainLoop',\n  'wget',\n  'tempFixedLengthArray',\n  'miniTempWebGLFloatBuffers',\n  'heapObjectForWebGLType',\n  'heapAccessShiftForWebGLHeap',\n  'GL',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'emscriptenWebGLGetTexPixelData',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  'writeGLArray',\n  'AL',\n  'SDL_unicode',\n  'SDL_ttfContext',\n  'SDL_audio',\n  'SDL',\n  'SDL_gfx',\n  'GLUT',\n  'EGL',\n  'GLFW_Window',\n  'GLFW',\n  'GLEW',\n  'IDBStore',\n  'runAndAbortIfError',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n];\nunexportedRuntimeSymbols.forEach(unexportedRuntimeSymbol);\nvar missingLibrarySymbols = [\n  'zeroMemory',\n  'stringToNewUTF8',\n  'exitJS',\n  'emscripten_realloc_buffer',\n  'setErrNo',\n  'inetPton4',\n  'inetNtop4',\n  'inetPton6',\n  'inetNtop6',\n  'readSockaddr',\n  'writeSockaddr',\n  'getHostByName',\n  'getRandomDevice',\n  'traverseStack',\n  'convertPCtoSourceLocation',\n  'readEmAsmArgs',\n  'runEmAsmFunction',\n  'runMainThreadEmAsm',\n  'jstoi_q',\n  'jstoi_s',\n  'getExecutableName',\n  'listenOnce',\n  'autoResumeAudioContext',\n  'dynCallLegacy',\n  'getDynCaller',\n  'dynCall',\n  'handleException',\n  'runtimeKeepalivePush',\n  'runtimeKeepalivePop',\n  'callUserCallback',\n  'maybeExit',\n  'safeSetTimeout',\n  'asmjsMangle',\n  'asyncLoad',\n  'alignMemory',\n  'mmapAlloc',\n  'writeI53ToI64',\n  'writeI53ToI64Clamped',\n  'writeI53ToI64Signaling',\n  'writeI53ToU64Clamped',\n  'writeI53ToU64Signaling',\n  'readI53FromI64',\n  'readI53FromU64',\n  'convertI32PairToI53',\n  'convertU32PairToI53',\n  'uleb128Encode',\n  'sigToWasmTypes',\n  'generateFuncType',\n  'convertJsFunctionToWasm',\n  'getEmptyTableSlot',\n  'updateTableMap',\n  'addFunction',\n  'removeFunction',\n  'reallyNegative',\n  'unSign',\n  'strLen',\n  'reSign',\n  'formatString',\n  'intArrayFromString',\n  'intArrayToString',\n  'AsciiToString',\n  'stringToAscii',\n  'UTF16ToString',\n  'stringToUTF16',\n  'lengthBytesUTF16',\n  'UTF32ToString',\n  'stringToUTF32',\n  'lengthBytesUTF32',\n  'allocateUTF8',\n  'allocateUTF8OnStack',\n  'writeStringToMemory',\n  'writeAsciiToMemory',\n  'getSocketFromFD',\n  'getSocketAddress',\n  'registerKeyEventCallback',\n  'maybeCStringToJsString',\n  'findEventTarget',\n  'findCanvasEventTarget',\n  'getBoundingClientRect',\n  'fillMouseEventData',\n  'registerMouseEventCallback',\n  'registerWheelEventCallback',\n  'registerUiEventCallback',\n  'registerFocusEventCallback',\n  'fillDeviceOrientationEventData',\n  'registerDeviceOrientationEventCallback',\n  'fillDeviceMotionEventData',\n  'registerDeviceMotionEventCallback',\n  'screenOrientation',\n  'fillOrientationChangeEventData',\n  'registerOrientationChangeEventCallback',\n  'fillFullscreenChangeEventData',\n  'registerFullscreenChangeEventCallback',\n  'JSEvents_requestFullscreen',\n  'JSEvents_resizeCanvasForFullscreen',\n  'registerRestoreOldStyle',\n  'hideEverythingExceptGivenElement',\n  'restoreHiddenElements',\n  'setLetterbox',\n  'softFullscreenResizeWebGLRenderTarget',\n  'doRequestFullscreen',\n  'fillPointerlockChangeEventData',\n  'registerPointerlockChangeEventCallback',\n  'registerPointerlockErrorEventCallback',\n  'requestPointerLock',\n  'fillVisibilityChangeEventData',\n  'registerVisibilityChangeEventCallback',\n  'registerTouchEventCallback',\n  'fillGamepadEventData',\n  'registerGamepadEventCallback',\n  'registerBeforeUnloadEventCallback',\n  'fillBatteryEventData',\n  'battery',\n  'registerBatteryEventCallback',\n  'setCanvasElementSize',\n  'getCanvasElementSize',\n  'demangle',\n  'demangleAll',\n  'jsStackTrace',\n  'stackTrace',\n  'getEnvStrings',\n  'checkWasiClock',\n  'createDyncallWrapper',\n  'setImmediateWrapped',\n  'clearImmediateWrapped',\n  'polyfillSetImmediate',\n  'ExceptionInfo',\n  'exception_addRef',\n  'exception_decRef',\n  'setMainLoop',\n  'heapObjectForWebGLType',\n  'heapAccessShiftForWebGLHeap',\n  'emscriptenWebGLGet',\n  'computeUnpackAlignedImageSize',\n  'emscriptenWebGLGetTexPixelData',\n  'emscriptenWebGLGetUniform',\n  'webglGetUniformLocation',\n  'webglPrepareUniformLocationsBeforeFirstUse',\n  'webglGetLeftBracePos',\n  'emscriptenWebGLGetVertexAttrib',\n  'writeGLArray',\n  'SDL_unicode',\n  'SDL_ttfContext',\n  'SDL_audio',\n  'GLFW_Window',\n  'runAndAbortIfError',\n  'ALLOC_NORMAL',\n  'ALLOC_STACK',\n  'allocate',\n];\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\n\n\nvar calledRun;\n\ndependenciesFulfilled = function runCaller() {\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n  if (!calledRun) run();\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n};\n\nfunction stackCheckInit() {\n  // This is normally called automatically during __wasm_call_ctors but need to\n  // get these values before even running any of the ctors so we call it redundantly\n  // here.\n  _emscripten_stack_init();\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\n  writeStackCookie();\n}\n\n/** @type {function(Array=)} */\nfunction run(args) {\n  args = args || arguments_;\n\n  if (runDependencies > 0) {\n    return;\n  }\n\n    stackCheckInit();\n\n  preRun();\n\n  // a preRun added a dependency, run will be called later\n  if (runDependencies > 0) {\n    return;\n  }\n\n  function doRun() {\n    // run may have just been called through dependencies being fulfilled just in this very frame,\n    // or while the async setStatus time below was happening\n    if (calledRun) return;\n    calledRun = true;\n    Module['calledRun'] = true;\n\n    if (ABORT) return;\n\n    initRuntime();\n\n    readyPromiseResolve(Module);\n    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');\n\n    postRun();\n  }\n\n  if (Module['setStatus']) {\n    Module['setStatus']('Running...');\n    setTimeout(function() {\n      setTimeout(function() {\n        Module['setStatus']('');\n      }, 1);\n      doRun();\n    }, 1);\n  } else\n  {\n    doRun();\n  }\n  checkStackCookie();\n}\n\nfunction checkUnflushedContent() {\n  // Compiler settings do not allow exiting the runtime, so flushing\n  // the streams is not possible. but in ASSERTIONS mode we check\n  // if there was something to flush, and if so tell the user they\n  // should request that the runtime be exitable.\n  // Normally we would not even include flush() at all, but in ASSERTIONS\n  // builds we do so just for this check, and here we see if there is any\n  // content to flush, that is, we check if there would have been\n  // something a non-ASSERTIONS build would have not seen.\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n  // mode (which has its own special function for this; otherwise, all\n  // the code is inside libc)\n  var oldOut = out;\n  var oldErr = err;\n  var has = false;\n  out = err = (x) => {\n    has = true;\n  }\n  try { // it doesn't matter if it fails\n    flush_NO_FILESYSTEM();\n  } catch(e) {}\n  out = oldOut;\n  err = oldErr;\n  if (has) {\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');\n    warnOnce('(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)');\n  }\n}\n\nif (Module['preInit']) {\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n  while (Module['preInit'].length > 0) {\n    Module['preInit'].pop()();\n  }\n}\n\nrun();\n\n\n\n\n\n\n\n  return FFTWModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = FFTWModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return FFTWModule; });\nelse if (typeof exports === 'object')\n  exports[\"FFTWModule\"] = FFTWModule;\n", "import factoryFn from \"../libfftw3-wasm/libfftw3.cjs\";\r\nimport wasmBinary from \"../libfftw3-wasm/libfftw3.wasm\";\r\n\r\nexport const FFTWModuleFactoryFn = factoryFn;\r\nexport const FFTWModuleFactoryWasm = wasmBinary;\r\n\r\n/**\r\n * Instantiate EMCC Module using bundled binaries. Module constructor and files can be overriden.\r\n */\r\nconst instantiateFFTWModule = async (ModuleFactoryIn = factoryFn, wasmBinaryIn = wasmBinary) => {\r\n    const g = globalThis as any;\r\n    if (g.AudioWorkletGlobalScope) {\r\n        g.importScripts = () => {};\r\n        g.self = { location: { href: \"\" } };\r\n    }\r\n    const module = await ModuleFactoryIn({\r\n        wasmBinary: wasmBinaryIn/*,\r\n        getPreloadedPackage: (remotePackageName: string, remotePackageSize: number) => {\r\n            if (remotePackageName === \"libfaust-wasm.data\") return dataBinaryIn.buffer;\r\n            return new ArrayBuffer(0);\r\n        }*/\r\n    });\r\n    if (g.AudioWorkletGlobalScope) {\r\n\t\tdelete g.importScripts;\r\n\t\tdelete g.self;\r\n    }\r\n    return module;\r\n};\r\n\r\nexport default instantiateFFTWModule;\r\n", "import type { FFTWModuleFactory } from \"./types\";\n\n/**\n * Load emcc-wasm files, than instantiate it\n * @param jsFile path to `emcc-wasm.js`\n * @param wasmFile path to `emcc-wasm.wasm`\n * @param dataFile path to `emcc-wasm.data`\n */\nconst instantiateFFTWModuleFromFile = async (jsFile: string, wasmFile = jsFile.replace(/c?js$/, \"wasm\"), dataFile = jsFile.replace(/c?js$/, \"data\")) => {\n    let Module: FFTWModuleFactory;\n    // let dataBinary: ArrayBuffer;\n    let wasmBinary: Uint8Array | ArrayBuffer;\n    const jsCodeHead = /var (.+) = \\(\\(\\) => \\{/;\n    if (typeof globalThis.fetch === \"function\") {\n        let jsCode = await (await fetch(jsFile)).text();\n        jsCode = `${jsCode}\nexport default ${jsCode.match(jsCodeHead)?.[1]};\n`;\n        const jsFileMod = URL.createObjectURL(new Blob([jsCode], { type: \"text/javascript\" }));\n        Module = (await import(/* webpackIgnore: true */jsFileMod)).default;\n        // dataBinary = await (await fetch(dataFile)).arrayBuffer();\n        wasmBinary = new Uint8Array(await (await fetch(wasmFile)).arrayBuffer());\n    } else {\n        const { promises: fs } = await import(\"fs\");\n        const { pathToFileURL } = await import(\"url\");\n        let jsCode = (await fs.readFile(jsFile, { encoding: \"utf-8\" }));\n        jsCode = `\nimport process from \"process\";\nimport * as path from \"path\";\nimport { createRequire } from \"module\";\nimport { fileURLToPath } from \"url\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst __filename = fileURLToPath(import.meta.url);\nconst require = createRequire(import.meta.url);\n\n${jsCode}\n\nexport default ${jsCode.match(jsCodeHead)?.[1]};\n`;\n        const jsFileMod = jsFile.replace(/c?js$/, \"mjs\");\n        await fs.writeFile(jsFileMod, jsCode);\n        Module = (await import(/* webpackIgnore: true */pathToFileURL(jsFileMod).href)).default;\n        await fs.unlink(jsFileMod);\n        // dataBinary = (await fs.readFile(dataFile)).buffer;\n        wasmBinary = (await fs.readFile(wasmFile)).buffer;\n    }\n    const module = await Module({\n        wasmBinary/*,\n        getPreloadedPackage: (remotePackageName: string, remotePackageSize: number) => {\n            if (remotePackageName === \"libfaust-wasm.data\") return dataBinary;\n            return new ArrayBuffer(0);\n        }*/\n    });\n    return module;\n};\n\nexport default instantiateFFTWModuleFromFile;\n", "import type { FFT, FFTWModule } from \"./types\";\r\n\r\nclass FFTW {\r\n    c2c: { FFT1D: new (size: number) => FFT; FFT2D: new (n0: number, n1: number) => FFT; };\r\n    r2c: { FFT1D: new (size: number) => FFT; };\r\n    r2r: { FFT1D: new (size: number) => FFT; DCT1D: new (size: number) => FFT; DST1D: new (size: number) => FFT; FFT2D: new (n0: number, n1: number) => FFT; DCT2D: new (n0: number, n1: number) => FFT; DST2D: new (n0: number, n1: number) => FFT; };\r\n    constructor(fftwModule: FFTWModule) {\r\n        const FFTW_ESTIMATE = (1 << 6);\r\n        \r\n        const FFTW_R2HC = 0;\r\n        const FFTW_HC2R = 1;\r\n        const FFTW_DHT = 2;\r\n        const FFTW_REDFT00 = 3;\r\n        const FFTW_REDFT10 = 5;\r\n        const FFTW_REDFT01 = 4;\r\n        const FFTW_REDFT11 = 6;\r\n        const FFTW_RODFT00 = 7;\r\n        const FFTW_RODFT10 = 9;\r\n        const FFTW_RODFT01 = 8;\r\n        const FFTW_RODFT11 = 10;\r\n        \r\n        const FFTW_FORWARD = -1;\r\n        const FFTW_BACKWARD = 1;\r\n\r\n        const {\r\n            _fftwf_plan_dft_r2c_1d,\r\n            _fftwf_plan_dft_c2r_1d,\r\n            _fftwf_plan_r2r_1d,\r\n            _fftwf_plan_r2r_2d,\r\n            _fftwf_plan_dft_1d,\r\n            _fftwf_plan_dft_2d,\r\n            _fftwf_execute,\r\n            _fftwf_destroy_plan,\r\n            _fftwf_free,\r\n            _fftwf_malloc\r\n        } = fftwModule;\r\n        \r\n        class C2CFFT2D implements FFT {\r\n            n0: number;\r\n            n1: number;\r\n            size: number;\r\n            c0ptr: number;\r\n            c1ptr: number;\r\n            c0: Float32Array;\r\n            c1: Float32Array;\r\n            fplan: number;\r\n            iplan: number;\r\n            constructor(n0: number, n1: number) {\r\n                this.n0 = n0;\r\n                this.n1 = n1;\r\n\r\n                this.size = n0 * n1;\r\n                this.c0ptr = _fftwf_malloc(2 * 4 * this.size);\r\n                this.c1ptr = _fftwf_malloc(2 * 4 * this.size);\r\n\r\n                this.c0 = new Float32Array(fftwModule.HEAPU8.buffer, this.c0ptr, 2 * this.size); // two for complex\r\n                this.c1 = new Float32Array(fftwModule.HEAPU8.buffer, this.c1ptr, 2 * this.size);\r\n\r\n                this.fplan = _fftwf_plan_dft_2d(this.n0, this.n1, this.c0ptr, this.c1ptr, FFTW_FORWARD, FFTW_ESTIMATE);\r\n                this.iplan = _fftwf_plan_dft_2d(this.n0, this.n1, this.c1ptr, this.c0ptr, FFTW_BACKWARD, FFTW_ESTIMATE);\r\n            }\r\n\r\n            forward(cpx: ArrayLike<number> | ((cpx: Float32Array) => any)) {\r\n                if (typeof cpx === \"function\") cpx(this.c0);\r\n                else this.c0.set(cpx);\r\n                _fftwf_execute(this.fplan);\r\n                return this.c1;\r\n            }\r\n\r\n            inverse(cpx: ArrayLike<number> | ((cpx: Float32Array) => any)) {\r\n                if (typeof cpx === \"function\") cpx(this.c1);\r\n                else this.c1.set(cpx);\r\n                _fftwf_execute(this.iplan);\r\n                return this.c0;\r\n            }\r\n\r\n            dispose() {\r\n                _fftwf_destroy_plan(this.fplan);\r\n                _fftwf_destroy_plan(this.iplan);\r\n                _fftwf_free(this.c0ptr);\r\n                _fftwf_free(this.c1ptr);\r\n            }\r\n        }\r\n\r\n        class C2CFFT1D implements FFT {\r\n            size: number;\r\n            c0ptr: number;\r\n            c1ptr: number;\r\n            c0: Float32Array;\r\n            c1: Float32Array;\r\n            fplan: number;\r\n            iplan: number;\r\n            constructor(size: number) {\r\n                this.size = size;\r\n                // this.c0ptr = _fftwf_malloc(2*4*size + 2*4*size);\r\n                // this.c1ptr = this.c0ptr;\r\n                this.c0ptr = _fftwf_malloc(2 * 4 * size);\r\n                this.c1ptr = _fftwf_malloc(2 * 4 * size);\r\n\r\n                this.c0 = new Float32Array(fftwModule.HEAPU8.buffer, this.c0ptr, 2 * size);\r\n                this.c1 = new Float32Array(fftwModule.HEAPU8.buffer, this.c1ptr, 2 * size);\r\n\r\n                this.fplan = _fftwf_plan_dft_1d(size, this.c0ptr, this.c1ptr, FFTW_FORWARD, FFTW_ESTIMATE);\r\n                this.iplan = _fftwf_plan_dft_1d(size, this.c1ptr, this.c0ptr, FFTW_BACKWARD, FFTW_ESTIMATE);\r\n            }\r\n\r\n            forward(cpx: ArrayLike<number> | ((cpx: Float32Array) => any)) {\r\n                if (typeof cpx === \"function\") cpx(this.c0);\r\n                else this.c0.set(cpx);\r\n                _fftwf_execute(this.fplan);\r\n                return this.c1;\r\n            }\r\n\r\n            inverse(cpx: ArrayLike<number> | ((cpx: Float32Array) => any)) {\r\n                if (typeof cpx === \"function\") cpx(this.c1);\r\n                else this.c1.set(cpx);\r\n                _fftwf_execute(this.iplan);\r\n                return this.c0;\r\n            }\r\n\r\n            dispose() {\r\n                _fftwf_destroy_plan(this.fplan);\r\n                _fftwf_destroy_plan(this.iplan);\r\n                _fftwf_free(this.c0ptr);\r\n                _fftwf_free(this.c1ptr);\r\n            }\r\n        }\r\n\r\n        class R2CFFT1D implements FFT {\r\n            size: number;\r\n            rptr: number;\r\n            cptr: number;\r\n            r: Float32Array;\r\n            c: Float32Array;\r\n            fplan: number;\r\n            iplan: number;\r\n            constructor(size: number) {\r\n                this.size = size;\r\n                this.rptr = _fftwf_malloc(size * 4 + (size + 2) * 4);\r\n                this.cptr = this.rptr + size * 4;\r\n\r\n                this.r = new Float32Array(fftwModule.HEAPU8.buffer, this.rptr, size);\r\n                this.c = new Float32Array(fftwModule.HEAPU8.buffer, this.cptr, size + 2);\r\n\r\n                this.fplan = _fftwf_plan_dft_r2c_1d(size, this.rptr, this.cptr, FFTW_ESTIMATE);\r\n                this.iplan = _fftwf_plan_dft_c2r_1d(size, this.cptr, this.rptr, FFTW_ESTIMATE);\r\n            }\r\n\r\n            forward(real: ArrayLike<number> | ((real: Float32Array) => any)) {\r\n                if (typeof real === \"function\") real(this.r);\r\n                else this.r.set(real);\r\n                _fftwf_execute(this.fplan);\r\n                return this.c;\r\n            }\r\n\r\n            inverse(cpx: ArrayLike<number> | ((cpx: Float32Array) => any)) {\r\n                if (typeof cpx === \"function\") cpx(this.c);\r\n                else this.c.set(cpx);\r\n                _fftwf_execute(this.iplan);\r\n                return this.r;\r\n            }\r\n\r\n            dispose() {\r\n                _fftwf_destroy_plan(this.fplan);\r\n                _fftwf_destroy_plan(this.iplan);\r\n                _fftwf_free(this.rptr);\r\n            }\r\n        }\r\n\r\n        const r2r1dFactory = (forwardType: number, inverseType: number) => {\r\n            return class R2RFFT1D implements FFT {\r\n                size: number;\r\n                rptr: number;\r\n                cptr: number;\r\n                r: Float32Array;\r\n                c: Float32Array;\r\n                fplan: number;\r\n                iplan: number;\r\n                constructor(size: number) {\r\n                    this.size = size;\r\n                    this.rptr = _fftwf_malloc(size * 4 + size * 4);\r\n\r\n                    this.cptr = this.rptr;\r\n                    this.r = new Float32Array(fftwModule.HEAPU8.buffer, this.rptr, size);\r\n                    this.c = new Float32Array(fftwModule.HEAPU8.buffer, this.cptr, size);\r\n\r\n                    this.fplan = _fftwf_plan_r2r_1d(size, this.rptr, this.cptr, forwardType, FFTW_ESTIMATE);\r\n                    this.iplan = _fftwf_plan_r2r_1d(size, this.cptr, this.rptr, inverseType, FFTW_ESTIMATE);\r\n                }\r\n\r\n                forward(real: ArrayLike<number> | ((real: Float32Array) => any)) {\r\n                    if (typeof real === \"function\") real(this.r);\r\n                    else this.r.set(real);\r\n                    _fftwf_execute(this.fplan);\r\n                    return this.c;\r\n                }\r\n\r\n                inverse(cpx: ArrayLike<number> | ((cpx: Float32Array) => any)) {\r\n                    if (typeof cpx === \"function\") cpx(this.c);\r\n                    else this.c.set(cpx);\r\n                    _fftwf_execute(this.iplan);\r\n                    return this.r;\r\n                }\r\n\r\n                dispose() {\r\n                    _fftwf_destroy_plan(this.fplan);\r\n                    _fftwf_destroy_plan(this.iplan);\r\n                    _fftwf_free(this.rptr);\r\n                }\r\n            }\r\n        };\r\n\r\n        const r2r2dFactory = (forwardType: number, inverseType: number) => {\r\n            return class R2RFFT2D implements FFT {\r\n                n0: number;\r\n                n1: number;\r\n                size: number;\r\n                rptr: number;\r\n                cptr: number;\r\n                r: Float32Array;\r\n                c: Float32Array;\r\n                fplan: number;\r\n                iplan: number;\r\n                constructor(n0: number, n1: number) {\r\n                    this.n0 = n0;\r\n                    this.n1 = n1;\r\n\r\n                    this.size = this.n0 * this.n1;\r\n                    this.rptr = _fftwf_malloc(this.size * 4);\r\n                    this.cptr = _fftwf_malloc(this.size * 4);\r\n\r\n                    this.r = new Float32Array(fftwModule.HEAPU8.buffer, this.rptr, this.size);\r\n                    this.c = new Float32Array(fftwModule.HEAPU8.buffer, this.cptr, this.size);\r\n\r\n                    this.fplan = _fftwf_plan_r2r_2d(this.n0, this.n1, this.rptr, this.cptr, forwardType, forwardType, FFTW_ESTIMATE);\r\n                    this.iplan = _fftwf_plan_r2r_2d(this.n0, this.n1, this.cptr, this.rptr, inverseType, inverseType, FFTW_ESTIMATE);\r\n                }\r\n                \r\n                forward(real: ArrayLike<number> | ((real: Float32Array) => any)) {\r\n                    if (typeof real === \"function\") real(this.r);\r\n                    else this.r.set(real);\r\n                    _fftwf_execute(this.fplan);\r\n                    return this.c;\r\n                }\r\n\r\n                inverse(cpx: ArrayLike<number> | ((cpx: Float32Array) => any)) {\r\n                    if (typeof cpx === \"function\") cpx(this.c);\r\n                    else this.c.set(cpx);\r\n                    _fftwf_execute(this.iplan);\r\n                    return this.r;\r\n                }\r\n\r\n                dispose() {\r\n                    _fftwf_destroy_plan(this.fplan);\r\n                    _fftwf_destroy_plan(this.iplan);\r\n                    _fftwf_free(this.rptr);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.c2c = {\r\n            FFT1D: C2CFFT1D,\r\n            FFT2D: C2CFFT2D\r\n        };\r\n        this.r2c = {\r\n            FFT1D: R2CFFT1D\r\n        };\r\n        this.r2r = {\r\n            FFT1D: r2r1dFactory(FFTW_R2HC, FFTW_HC2R),\r\n            DCT1D: r2r1dFactory(FFTW_REDFT10, FFTW_REDFT01),\r\n            DST1D: r2r1dFactory(FFTW_RODFT10, FFTW_RODFT01),\r\n            FFT2D: r2r2dFactory(FFTW_R2HC, FFTW_HC2R),\r\n            DCT2D: r2r2dFactory(FFTW_REDFT10, FFTW_REDFT01),\r\n            DST2D: r2r2dFactory(FFTW_RODFT10, FFTW_RODFT01)\r\n        }\r\n    }\r\n}\r\n\r\nexport default FFTW;\r\n"],
  "mappings": "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",
  "names": []
}
